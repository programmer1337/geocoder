networks:
  overlay:

volumes:
  pg_data:

services:
  reverse-proxy:
    # The official v3.1 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    # --api.insecure=true --providers.docker.exposedbydefault=false
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - overlay

  search-coder:
    image: geocoder:latest
    container_name: search
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.search.rule=Host(`geocoder.localhost`) && PathPrefix(`/geocoder/search`)"
      - "traefik.http.services.search.loadbalancer.healthCheck.path=/geocoder/health"
    restart: unless-stopped
    ports:
      - '80'
    networks:
      - overlay

  reverse-coder:
    image: geocoder:latest
    container_name: reverse-coder
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverse-coder.rule=Host(`geocoder.localhost`) && PathPrefix(`/geocoder/reverse`)"
      - "traefik.http.services.reverse-coder.loadbalancer.healthCheck.path=/geocoder/health"
    restart: unless-stopped
    ports:
      - '80'
    networks:
      - overlay

  database:
    image: postgres:15
    container_name: geocoder-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=geocoder
      - POSTGRES_USER=geocoder
      - POSTGRES_PASSWORD=geocoderpass
    ports:
      - '5432'
    networks:
      - overlay
    volumes:
      - pg_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.pgadmin-auth.basicauth.users=test:$$2a$$12$$i8Rve/qU804Tn/vZwA12m.iivIJL.9Xtzj/ecMOJVtpCNlt35q7Va/"
      - "traefik.http.middlewares.test-retry.retry.attempts=3"
      #      - "traefik.http.middlewares.test-retry.retry.initialinterval=10s"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.docker.localhost`)"
      - "traefik.http.routers.pgadmin.middlewares=test-retry@docker,pgadmin-auth@docker"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '80'
    networks:
      - overlay
